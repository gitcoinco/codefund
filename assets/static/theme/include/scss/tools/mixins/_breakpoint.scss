// Breakpoint viewport sizes and media queries.
//
// Breakpoints are defined as a map of (name: minimum width), order from small to large:
//
//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)
//
// The map defined in the `$g-breakpoints` global variable is used as the `$hs-breakpoints` argument by default.

// Name of the next breakpoint, or null for the last breakpoint.
//
//    >> breakpoint-next(sm)
//    md
//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
//    md
//    >> breakpoint-next(sm, $hs-breakpoint-names: (xs sm md lg xl))
//    md
@function breakpoint-next($hs-name, $hs-breakpoints: $g-breakpoints, $hs-breakpoint-names: map-keys($hs-breakpoints)) {
  $n: index($hs-breakpoint-names, $hs-name);
  @return if($n < length($hs-breakpoint-names), nth($hs-breakpoint-names, $n + 1), null);
}

// Minimum breakpoint width. Null for the smallest (first) breakpoint.
//
//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
//    576px
@function breakpoint-min($hs-name, $hs-breakpoints: $g-breakpoints) {
  $hs-min: map-get($hs-breakpoints, $hs-name);
  @return if($hs-min != 0, $hs-min, null);
}

// Maximum breakpoint width. Null for the largest (last) breakpoint.
// The maximum value is calculated as the minimum of the next one less 0.1.
//
//    >> breakpoint-max(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
//    767px
@function breakpoint-max($hs-name, $hs-breakpoints: $g-breakpoints) {
  $hs-next: breakpoint-next($hs-name, $hs-breakpoints);
  @return if($hs-next, breakpoint-min($hs-next, $hs-breakpoints) - 1px, null);
}

// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash infront.
// Useful for making responsive utilities.
//
//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
//    ""  (Returns a blank string)
//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
//    "-sm"
@function breakpoint-infix($hs-name, $hs-breakpoints: $g-breakpoints) {
  @return if(breakpoint-min($hs-name, $hs-breakpoints) == null, "", "-#{$hs-name}");
}

// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.
// Makes the @content apply to the given breakpoint and wider.
@mixin media-breakpoint-up($hs-name, $hs-breakpoints: $g-breakpoints) {
  $hs-min: breakpoint-min($hs-name, $hs-breakpoints);
  @if $hs-min {
    @media (min-width: $hs-min) {
      @content;
    }
  } @else {
    @content;
  }
}

// Media of at most the maximum breakpoint width. No query for the largest breakpoint.
// Makes the @content apply to the given breakpoint and narrower.
@mixin media-breakpoint-down($hs-name, $hs-breakpoints: $g-breakpoints) {
  $hs-max: breakpoint-max($hs-name, $hs-breakpoints);
  @if $hs-max {
    @media (max-width: $hs-max) {
      @content;
    }
  } @else {
    @content;
  }
}

// Media that spans multiple breakpoint widths.
// Makes the @content apply between the min and max breakpoints
@mixin media-breakpoint-between($lower, $upper, $hs-breakpoints: $g-breakpoints) {
  $hs-min: breakpoint-min($lower, $hs-breakpoints);
  $hs-max: breakpoint-max($upper, $hs-breakpoints);

  @if $hs-min != null and $hs-max != null {
    @media (min-width: $hs-min) and (max-width: $hs-max) {
      @content;
    }
  } @else if $hs-max == null {
    @include media-breakpoint-up($lower) {
      @content;
    }
  } @else if $hs-min == null {
    @include media-breakpoint-down($upper) {
      @content;
    }
  }
}

// Media between the breakpoint's minimum and maximum widths.
// No minimum for the smallest breakpoint, and no maximum for the largest one.
// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.
@mixin media-breakpoint-only($hs-name, $hs-breakpoints: $g-breakpoints) {
  $hs-min: breakpoint-min($hs-name, $hs-breakpoints);
  $hs-max: breakpoint-max($hs-name, $hs-breakpoints);

  @if $hs-min != null and $hs-max != null {
    @media (min-width: $hs-min) and (max-width: $hs-max) {
      @content;
    }
  } @else if $hs-max == null {
    @include media-breakpoint-up($hs-name) {
      @content;
    }
  } @else if $hs-min == null {
    @include media-breakpoint-down($hs-name) {
      @content;
    }
  }
}
