import { Action } from "./action";
import { Application } from "./application";
import { Controller } from "./controller";
import { InlineActionObserverDelegate } from "./inline_action_observer";
import { Module } from "./module";
import { Schema } from "./schema";
import { Scope } from "./scope";
export declare class Context implements InlineActionObserverDelegate {
    readonly module: Module;
    readonly scope: Scope;
    readonly controller: Controller;
    private actions;
    private inlineActionObserver;
    constructor(module: Module, element: Element);
    connect(): void;
    disconnect(): void;
    readonly application: Application;
    readonly identifier: string;
    readonly schema: Schema;
    readonly element: Element;
    readonly parentElement: Element | null;
    /** @private */
    inlineActionConnected(action: Action): void;
    /** @private */
    inlineActionDisconnected(action: Action): void;
    handleError(error: Error, message: string, detail?: object): void;
}
