import { Action } from "./action";
import { Context } from "./context";
import { Schema } from "./schema";
import { Scope } from "./scope";
import { TokenListObserverDelegate } from "@stimulus/mutation-observers";
export interface InlineActionObserverDelegate {
    inlineActionConnected(action: Action): any;
    inlineActionDisconnected(action: Action): any;
}
export declare class InlineActionObserver implements TokenListObserverDelegate {
    readonly context: Context;
    readonly delegate: InlineActionObserverDelegate;
    private tokenListObserver;
    private connectedActions;
    constructor(context: Context, delegate: InlineActionObserverDelegate);
    readonly scope: Scope;
    readonly schema: Schema;
    readonly attributeName: string;
    readonly element: Element;
    readonly identifier: string;
    start(): void;
    stop(): void;
    /** @private */
    elementMatchedTokenForAttribute(element: Element, token: string, attributeName: string): void;
    /** @private */
    elementUnmatchedTokenForAttribute(element: Element, token: string, attributeName: string): void;
    private getConnectedActionForElementWithDescriptorString(element, descriptorString);
    private buildActionForElementWithDescriptorString(element, descriptorString);
}
